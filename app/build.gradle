apply plugin: 'com.android.library'
android {
    compileSdkVersion 20
    buildToolsVersion "22.0.1"

    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 19
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles  'proguard-rules.txt'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_6
        targetCompatibility JavaVersion.VERSION_1_6
    }
}

dependencies {

        provided files('libs/classes.jar')


}


//def UnityProjectPath = '/Users/a/DEV'
//def UnityProjectPath = '/Users/a/Delete/Assets/Plugins/Android'
//def UnityProjectPath = '/Users/a/Desktop/Main Terminal/Assets/Plugins/Android'
//def UnityProjectPath = '/Users/a/UnityProjects/TerminalDev/Assets/Plugins/Android'
def UnityProjectPath = 'D:\\Personal\\UnityWorkSpace\\BluetoothTerminlDev\\Assets\\Plugins\\Android'
def comndStr = 'C:\\Python27\\python.exe'
//def  comndStr = 'python'
//def pythonFile = 'C:\\Users\\hp\\Desktop\\ASunity.py'
def pythonFile = getProjectDir().toString() + "/ASunity.py";

def aarPathReleased = project.buildDir.toString() +"/outputs/aar/app-release.aar"
def aarPathDebug = project.buildDir.toString() +"/outputs/aar/app-debug.aar"
task runPythonRelease(type: Exec,dependsOn: 'assembleRelease') {
    println(pythonFile)

//    workingDir '/Users/a/DEV'

    commandLine comndStr ,pythonFile, UnityProjectPath,aarPathReleased
}

task runPythonDebug(type: Exec,dependsOn: 'assembleDebug') {


//    workingDir '/Users/a/DEV'

    commandLine comndStr , pythonFile, UnityProjectPath,aarPathDebug
}

